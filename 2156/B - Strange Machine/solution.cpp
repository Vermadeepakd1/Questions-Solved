#include <bits/stdc++.h>using namespace std;#define int long long#define endl '\n' signed main(){    ios::sync_with_stdio(false);    cin.tie(nullptr);     int tc;    cin >> tc;    while (tc--)    {        int n, q;        cin >> n >> q;        string m;        cin >> m;         vector<pair<char, int>> runs;        for (int i = 0; i < n;)        {            int j = i + 1;            while (j < n && m[j] == m[i])                j++;            runs.push_back({m[i], j - i});            i = j;        }         int cntA = 0, cntB = 0;        for (auto &p : runs)        {            if (p.first == 'A')                cntA += p.second;            else                cntB += p.second;        }         while (q--)        {            unsigned long long a;            cin >> a;            if (a == 0)            {                cout << 0 << endl;                continue;            }            if (cntB == 0)            {                cout << a << endl;                continue;            }            if (cntA == 0)            {                int steps = 64 - __builtin_clzll(a);                cout << steps << endl;                continue;            }             unsigned long long steps = 0;            int r = 0, R = runs.size();            while (a > 0)            {                auto [ch, L] = runs[r];                if (ch == 'A')                {                    if (a <= (unsigned long long)L)                    {                        steps += a;                        a = 0;                        break;                    }                    else                    {                        a -= (unsigned long long)L;                        steps += L;                    }                }                else                {                    if (L >= 64)                    {                        int t = (a == 0 ? 0 : 64 - __builtin_clzll(a));                        steps += t;                        a = 0;                        break;                    }                    else                    {                        int bits = 64 - __builtin_clzll(a);                        if (L >= bits)                        {                            steps += bits;                            a = 0;                            break;                        }                        else                        {                            a >>= L;                            steps += L;                        }                    }                }                r = (r + 1) % R;            }            cout << steps << endl;        }    }}